# for `On-premise` environment

services: 
  - name: fe-nginx
    #replicaCount: 1
    revisionHistoryLimit: 3
    image:
      repository: jnuho/fe-nginx
      tag: "latest"
      #pullPolicy: IfNotPresent
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 8080
      #targetPort: web
      targetPort: 80
    containerPort: 80
    #resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 256Mi
    readinessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 10
      periodSeconds: 10
      failureThreshold: 3
    livenessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 30
      periodSeconds: 10
      failureThreshold: 3

    # Additional volumes on the output Deployment definition.
    volumes:
      - name: config-volume
        configMap:
          name: application-settings
      # - name: foo
      #   secret:
      #     secretName: mysecret
      #     optional: false
    # Additional volumeMounts on the output Deployment definition.
    volumeMounts:
      - name: config-volume
        mountPath: /config
      # - name: foo
      #   mountPath: "/etc/foo"
      #   readOnly: true
    #nodeSelector: {}
    #tolerations: []
    #affinity: {}

  - name: be-go
    #replicaCount: 1
    revisionHistoryLimit: 3
    image:
      repository: jnuho/be-go
      tag: "latest"
      #pullPolicy: IfNotPresent
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 3001
      targetPort: 3001
    containerPort: 3001
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 256Mi
    readinessProbe:
      httpGet:
        path: /healthz-go
        port: 3001
      initialDelaySeconds: 10
      periodSeconds: 10
    livenessProbe:
      httpGet:
        path: /healthz-go
        port: 3001
      initialDelaySeconds: 30
      periodSeconds: 10

  - name: be-py
    #replicaCount: 1
    revisionHistoryLimit: 3
    image:
      repository: jnuho/be-py
      tag: "latest"
      #pullPolicy: IfNotPresent
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 3002
      targetPort: 3002
    containerPort: 3002
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 256Mi
    readinessProbe:
      httpGet:
        path: /healthz-py
        port: 3002
      initialDelaySeconds: 10
      periodSeconds: 10
    livenessProbe:
      httpGet:
        path: /healthz-py
        port: 3002
      initialDelaySeconds: 30
      periodSeconds: 10


hpas:
  - name: fe-nginx-hpa
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 80
  - name: be-go-hpa
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 75
  - name: be-py-hpa
    minReplicas: 2
    maxReplicas: 2
    targetCPUUtilizationPercentage: 55
    targetMemoryUtilizationPercentage: 60


ingress:
  - name: catornot-ingress
    className: "nginx"
    # annotations:
    #   nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - host: catornot.com
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fe-nginx-service
                port:
                  number: 8080
          - path: /web/cat
            pathType: Prefix
            backend:
              service:
                name: be-go-service
                port:
                  number: 3001
          - path: /weather
            pathType: Prefix
            backend:
              service:
                name: be-go-service
                port:
                  number: 3001
          - path: /healthz-go
            pathType: Prefix
            backend:
              service:
                name: be-go-service
                port:
                  number: 3001
          - path: /healthz-py
            pathType: Prefix
            backend:
              service:
                name: be-py-service
                port:
                  number: 3002
          # - path: /mongo-express
          #   pathType: Prefix
          #   backend:
          #     service:
          #       name: mongo-express-service
          #       port:
          #         number: 8081
    # tls: []
    tls:
    - hosts:
      - catornot.com
      secretName: catornot-tls
  - name: argocd-ingress
    namespace: argocd
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    hosts:
      - host: argocd.catornot.com
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fe-nginx-service
                port:
                  number: 8080
    tls:
    - hosts:
      - argocd.catornot.com
      secretName: argocd-server-tls

# secret:
#   - name: argocd-server-tls
#     namespace: argocd
#     cert: |
#       -----BEGIN CERTIFICATE-----
#       MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7V1...
#       -----END CERTIFICATE-----
#     key: |
#       -----BEGIN RSA PRIVATE KEY-----
#       MIIEpAIBAAKCAQEA7V1...
#       -----END RSA PRIVATE KEY-----

config:
  backend_go_url: http://localhost:8080
